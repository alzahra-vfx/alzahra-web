{"version":3,"sources":["webpack://alzahravfx-website/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://alzahravfx-website/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://alzahravfx-website/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://alzahravfx-website/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://alzahravfx-website/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://alzahravfx-website/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://alzahravfx-website/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://alzahravfx-website/./src/components/Layout/Subscribe/SubscribeFooter.tsx","webpack://alzahravfx-website/./src/components/MarkdownContent/MarkdownContent.tsx","webpack://alzahravfx-website/./src/_i18n/components/mdxLink.tsx","webpack://alzahravfx-website/./src/components/MarkdownContent/MarkdownContent.module.scss","webpack://alzahravfx-website/./src/components/utils/ImgSharp/ImgSharp.tsx","webpack://alzahravfx-website/./src/templates/film.tsx","webpack://alzahravfx-website/./src/templates/film.module.scss","webpack://alzahravfx-website/./node_modules/gatsby-plugin-mdx/index.js","webpack://alzahravfx-website/./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","arrayLikeToArray","isArray","obj","key","value","Object","defineProperty","enumerable","configurable","writable","iter","Symbol","iterator","from","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","o","minLen","n","prototype","toString","call","slice","constructor","name","test","formatMessage","useIntlHelper","className","styles","components","a","href","props","to","isStatic","target","rel","MarkdownContent","body","MDXProvider","MDXRenderer","image","src","alt","data","stickyRef","React","formatDate","Layout","template","post","frontmatter","tags","Link","ref","title","ImgSharp","childImageSharp","gatsbyImageData","director","dateTime","release","require","mdx","useMDXScope","scope","children","mdxScope","End","fullScope","keys","values","fn"],"mappings":"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","file":"component---src-templates-film-tsx-5d084598ad3ef2511c21.js","sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","import * as React from 'react';\nimport useIntlHelper from '~src/_i18n/helpers/useIntlHelper';\nimport SubscribeForm from './Subscribe';\nimport * as styles from './Subscribe.module.scss';\n\nconst SubscribeFooter = () => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<>\n\t\t\t<section className={styles.subscribeForm}>\n\t\t\t\t<h3 className={styles.subscribeFormTitle}> {formatMessage('subscribe.title')}</h3>\n\t\t\t\t<p className={styles.subscribeFormDescription}> {formatMessage('subscribe.desc')}</p>\n\t\t\t\t<SubscribeForm />\n\t\t\t</section>\n\t\t</>\n\t);\n};\n\nexport default SubscribeFooter;\n","import * as React from 'react';\nimport { MDXRenderer } from 'gatsby-plugin-mdx';\nimport { MDXProvider } from '@mdx-js/react';\nimport MdxLink from '~src/_i18n/components/mdxLink';\nimport * as styles from './MarkdownContent.module.scss';\n\n// Provide custom components for markdown elements\nconst components = {\n\ta: MdxLink,\n\n\t//h1: props => <h1 style={{ color: 'tomato' }} {...props} />,\n\t//Demo: () => <h1>This is a demo component</h1>,\n};\nexport const MarkdownContent: React.FC<{ body: string }> = ({ body }) => {\n\treturn (\n\t\t<section className={styles.postFullContent}>\n\t\t\t<div className={styles.postContent}>\n\t\t\t\t<MDXProvider components={components}>\n\t\t\t\t\t<MDXRenderer>{body}</MDXRenderer>\n\t\t\t\t</MDXProvider>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n","import * as React from 'react';\nimport LocalizedLink from './localizedLink';\n\nconst isHash = (str: string) => /^#/.test(str);\nconst isInternal = (to: string) => /^\\/(?!\\/)/.test(to);\nconst isStatic = (to: string) => /^\\/static/.test(to);\n\n// Only use <LocalizedLink /> for internal links\nconst MdxLink = ({ href, ...props }) =>\n\tisHash(href) || !isInternal(href) || isStatic(href) ? (\n\t\t<a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n\t) : (\n\t\t<LocalizedLink {...props} to={href} />\n\t);\n\nexport default MdxLink;\n","// extracted by mini-css-extract-plugin\nexport var postContent = \"h_C\";\nexport var postFullContent = \"h_D\";","import * as React from 'react';\nimport { GatsbyImage as Img, IGatsbyImageData } from 'gatsby-plugin-image';\n\n//import Img, { FixedObject, FluidObject } from 'gatsby-image';\n\nconst ImgSharp: React.FC<{\n\tclassName?: string;\n\timage: IGatsbyImageData;\n\tsrc?: string;\n\talt?: string;\n}> = ({ className, image, src, alt, ...props }) => (\n\t<>\n\t\t{image ? (\n\t\t\t<Img className={className} image={image} alt={alt} {...props} />\n\t\t) : (\n\t\t\tsrc && <img className={className} src={src} alt={alt} {...props} />\n\t\t)}\n\t</>\n);\n/*\nconst fixedObject = PropTypes.shape({\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n\nconst fluidObject = PropTypes.shape({\n\taspectRatio: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tsizes: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n */\n\nexport default ImgSharp;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport useIntlHelper from '~src/_i18n/helpers/useIntlHelper';\nimport Layout from '~src/components/Layout/Layout';\n\nimport Link from '~src/_i18n/components/Link';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport Subscribe from '~src/components/Layout/Subscribe/SubscribeFooter';\n//import ReadNext from '~src/components/Sections/Posts/ReadNext/ReadNext';\nimport { MarkdownContent } from '~src/components/MarkdownContent/MarkdownContent';\nimport * as styles from './film.module.scss';\nimport { Film } from '~src/templates/__generated__/Film';\n\nconst FilmTemplate: React.FC<{ data: Film }> = ({ data }) => {\n\tconst stickyRef: React.RefObject<HTMLDivElement> = React.useRef(null);\n\tconst { formatDate, formatMessage } = useIntlHelper();\n\treturn (\n\t\t<Layout template=\"post\" stickyRef={stickyRef} data={data}>\n\t\t\t<div className=\"inner\">\n\t\t\t\t<article className={styles.kgWidthFull}>\n\t\t\t\t\t<header className={styles.postFullHeader}>\n\t\t\t\t\t\t<div className={styles.filmMeta}>\n\t\t\t\t\t\t\t{data.post.frontmatter.tags && (\n\t\t\t\t\t\t\t\t<section className={styles.postFullTags}>\n\t\t\t\t\t\t\t\t\t<Link to={`/tags/${data.post.frontmatter.tags[0]}/`}>\n\t\t\t\t\t\t\t\t\t\t{formatMessage('tags.' + data.post.frontmatter.tags[0] + '.title')}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<h1 ref={stickyRef} className={styles.postFullTitle}>\n\t\t\t\t\t\t\t\t{data.post.frontmatter.title}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<figure className={styles.filmFullImage}>\n\t\t\t\t\t\t\t\t<ImgSharp\n\t\t\t\t\t\t\t\t\tclassName={styles.kgCodeCard}\n\t\t\t\t\t\t\t\t\timage={data.post.frontmatter.image.childImageSharp.gatsbyImageData}\n\t\t\t\t\t\t\t\t\talt={data.post.frontmatter.title}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</figure>\n\t\t\t\t\t\t\t{/* \t{post.excerpt && <p className={styles.postFullCustomExcerpt}>{post.excerpt}</p>}\t */}\n\t\t\t\t\t\t\t<div className={styles.postFullByline}>\n\t\t\t\t\t\t\t\t<section className={styles.postFullBylineContent}>\n\t\t\t\t\t\t\t\t\t{/* \t<AuthorList authors={post.frontmatter.authors} isPost={true} />\n\t\t\t\t\t\t\t\t\t */}\n\t\t\t\t\t\t\t\t\t<section className={styles.postFullBylineMeta}>\n\t\t\t\t\t\t\t\t\t\t<h3 className=\"author-name\">\n\t\t\t\t\t\t\t\t\t\t\t{formatMessage(`projects.director`)} :{data.post.frontmatter.director}\n\t\t\t\t\t\t\t\t\t\t\t{/* {post.frontmatter.authors.map((author, i) => (\n\t\t\t\t\t\t\t\t\t<React.Fragment key={i}>\n\t\t\t\t\t\t\t\t\t\t<Link to={`/authors/${author.id}/`}>{formatMessage(`authors.${author.id}.title`)}</Link>\n\t\t\t\t\t\t\t\t\t\t{i !== post.frontmatter.authors.length - 1 && formatMessage(`posts.seperator`) + ' '}\n\t\t\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t\t\t))}*/}\n\t\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t\t<div /* className={styles.postFullBylineMeta} */>\n\t\t\t\t\t\t\t\t\t\t\t{formatMessage(`projects.release`)}:\n\t\t\t\t\t\t\t\t\t\t\t<time className={styles.postFullMetaDate} dateTime={data.post.frontmatter.release}>\n\t\t\t\t\t\t\t\t\t\t\t\t{formatDate(data.post.frontmatter.release)}\n\t\t\t\t\t\t\t\t\t\t\t</time>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t\t</section>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<MarkdownContent body={data.post.body} />\n\t\t\t\t</article>\n\t\t\t\t<Subscribe />\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default FilmTemplate;\n\nexport const PostTemplateQuery = graphql`\n\tquery Film($title: String!, $locale: String!) {\n\t\tpost: mdx(frontmatter: { title: { eq: $title } }, fields: { locale: { eq: $locale } }) {\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\trelease\n\t\t\t\tdirector\n\t\t\t\ttags\n\t\t\t\timage {\n\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\tgatsbyImageData(layout: CONSTRAINED, placeholder: TRACED_SVG)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\ttimeToRead\n\t\t\tbody\n\t\t}\n\t}\n`;\n","// extracted by mini-css-extract-plugin\nexport var filmMeta = \"f_v\";\nexport var postFullHeader = \"f_b\";\nexport var postFullTags = \"f_c\";\nexport var postFullMetaDate = \"f_d\";\nexport var postFullTitle = \"f_f\";\nexport var postFullCustomExcerpt = \"f_g\";\nexport var filmFullImage = \"f_w\";\nexport var postFullByline = \"f_j\";\nexport var postFullBylineContent = \"f_k\";\nexport var postFullBylineMeta = \"f_l\";\nexport var bull = \"f_m\";\nexport var kgWidthFull = \"f_n\";\nexport var kgCodeCard = \"f_p\";","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","const React = require(`react`)\nconst { mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  children,\n  ...props\n}) {\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, {...props })\n}\n"],"sourceRoot":""}
{"version":3,"sources":["webpack://alzahravfx-website/./src/components/Sections/Filmography/FilmCard/FilmCard.tsx","webpack://alzahravfx-website/./src/components/Sections/Filmography/FilmCard/FilmCard.module.scss","webpack://alzahravfx-website/./src/components/Sections/Filmography/FilmFeed/FilmFeed.tsx","webpack://alzahravfx-website/./src/components/Sections/Filmography/FilmFeed/FilmFeed.module.scss","webpack://alzahravfx-website/./src/components/utils/ImgSharp/ImgSharp.tsx","webpack://alzahravfx-website/./src/pages/filmography.tsx"],"names":["FilmCard","film","i","isHome","useIntlHelper","formatMessage","formatDate","isFeatured","frontmatter","featured","className","styles","Link","to","fields","category","slug","ImgSharp","alt","title","image","childImageSharp","gatsbyImageData","undefined","tags","director","dateTime","release","FilmFeed","data","nodes","map","key","src","props","FilmographyHero","template","header","films","tv","shorts","commercials"],"mappings":"wMAUaA,EAIR,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,EAAGC,EAAa,EAAbA,OAChB,GAAsCC,SAA9BC,EAAR,EAAQA,cAAeC,EAAvB,EAAuBA,WACjBC,EAAaN,EAAKO,YAAYC,SACpC,OACC,2BAASC,UAAWC,SAA0BR,GAAUI,GAAc,GAAML,EAAI,ECDvD,ODCoB,KAC5C,gBAACU,EAAA,EAAD,CAAMF,UCbsB,ODaeG,GAAE,IAAMZ,EAAKa,OAAOC,SAAlB,IAA8Bd,EAAKa,OAAOE,MACtF,gBAACC,EAAA,EAAD,CACCP,UChBsB,ODiBtBQ,IAAKjB,EAAKO,YAAYW,MAEtBC,MAAOnB,EAAKO,YAAYY,MAAMC,gBAAgBC,mBAGhD,uBAAKZ,UChBqB,QDiBzB,gBAACE,EAAA,EAAD,CAAMF,UCrBuB,ODqBgBG,GAAE,IAAMZ,EAAKa,OAAOC,SAAlB,IAA8Bd,EAAKa,OAAOE,MACxF,0BAAQN,UCrBe,QDsBtB,uBAAKA,UCpBqB,aDqBKa,IAA7BtB,EAAKO,YAAYgB,KAAK,IAAoBnB,EAAc,QAAQJ,EAAKO,YAAYgB,KAAK,GAA/B,WAEzD,sBAAId,UC7BiB,QD6BiBT,EAAKO,YAAYW,QAGxD,2BAAST,UCtBqB,QDuB7B,4BACEL,EAAc,qBADhB,MACyCJ,EAAKO,YAAYiB,UAO1D,2BACA,4BACEpB,EAAc,oBADhB,MACuC,wBAAMqB,SAAUzB,EAAKO,YAAYmB,SAAUrB,EAAWL,EAAKO,YAAYmB,aAKhH,0BAAQjB,UCvCc,QD0CrB,uBAAKA,UC3CmB,aCJhBkB,EAAiE,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,KAAM1B,EAAa,EAAbA,OAC9EE,GAAkBD,SAAlBC,cACR,OACC,uBAAKK,UCVY,QDWhB,uBAAKA,UCVc,QDWhBmB,EAAKC,MAAiBC,KAAI,SAAC9B,EAAYC,GACxC,OAAO,gBAACF,EAAD,CAAUC,KAAMA,EAAMC,EAAGA,EAAG8B,IAAK9B,QAGzCC,EACA,gBAACS,EAAA,EAAD,CAAMC,GAAG,gBACR,sBAAIH,UChBa,QDgBjB,IAAkCP,EAASE,EAAc,uBAAyB,OAEhF,Q,uGEwBP,IAnCK,SAAC,GAAD,IAAGK,EAAH,EAAGA,UAAWU,EAAd,EAAcA,MAAOa,EAArB,EAAqBA,IAAKf,EAA1B,EAA0BA,IAAQgB,GAAlC,mBACJ,gCACEd,EACA,gBAAC,IAAD,eAAKV,UAAWA,EAAWU,MAAOA,EAAOF,IAAKA,GAASgB,IAEvDD,GAAO,qCAAKvB,UAAWA,EAAWuB,IAAKA,EAAKf,IAAKA,GAASgB,O,qFCTvDC,EAAkB,WACvB,IAAQ9B,GAAkBD,SAAlBC,cACR,OACC,0BAAQK,UAAU,6BACjB,uBAAKA,UAAU,6BACd,sBAAIA,UAAU,cAAd,IAA6BL,EAAc,wBAC3C,sBAAIK,UAAU,oBAAoBL,EAAc,2BAgCpD,UA3B4C,SAAC,GAAc,IAAZwB,EAAW,EAAXA,KACtCxB,GAAkBD,SAAlBC,cACR,OACC,gCACC,gBAAC,IAAD,CAAQ+B,SAAS,OAAOC,OAAQ,gBAACF,EAAD,OAC/B,uBAAKzB,UAAU,SACd,8BAAML,EAAc,mBACpB,gBAAC,IAAD,CAAUwB,KAAMA,EAAKS,QAErB,8BAAMjC,EAAc,gBACpB,gBAAC,IAAD,CAAUwB,KAAMA,EAAKU,KAErB,8BAAMlC,EAAc,oBACpB,gBAAC,IAAD,CAAUwB,KAAMA,EAAKW,SAErB,8BAAMnC,EAAc,yBACpB,gBAAC,IAAD,CAAUwB,KAAMA,EAAKY","file":"component---src-pages-filmography-tsx-bd2e810fc677d1f8e691.js","sourcesContent":["import * as React from 'react';\n//import { Index_posts_nodes as Post } from '~src/pages/__generated__/Index';\n//import AuthorList from '~src/components/Sections/AuthorList/AuthorList';\nimport Link from '~src/_i18n/components/Link';\nimport useIntlHelper from '~src/_i18n/helpers/useIntlHelper';\nimport ImgSharp from '~src/components/utils/ImgSharp/ImgSharp';\nimport * as styles from './FilmCard.module.scss';\nimport { Film } from '~src/types/Film';\n//import { IMDB } from '~src/_assets/icons/social/imdb';\n\nexport const FilmCard: React.FC<{\n\tfilm: Film;\n\ti?: number;\n\tisHome?: boolean;\n}> = ({ film, i, isHome }) => {\n\tconst { formatMessage, formatDate } = useIntlHelper();\n\tconst isFeatured = film.frontmatter.featured;\n\treturn (\n\t\t<article className={styles.postCard + ` ` + ((isHome && isFeatured && 0 === i % 6 && styles.postCardLarge) || ``)}>\n\t\t\t<Link className={styles.postCardImageLink} to={`/${film.fields.category}/${film.fields.slug}`}>\n\t\t\t\t<ImgSharp\n\t\t\t\t\tclassName={styles.postCardImage}\n\t\t\t\t\talt={film.frontmatter.title}\n\t\t\t\t\t/* \tsizes=\"(max-width: 1000px) 400px, 700px\" */\n\t\t\t\t\timage={film.frontmatter.image.childImageSharp.gatsbyImageData}\n\t\t\t\t/>\n\t\t\t</Link>\n\t\t\t<div className={styles.postCardContent}>\n\t\t\t\t<Link className={styles.postCardContentLink} to={`/${film.fields.category}/${film.fields.slug}`}>\n\t\t\t\t\t<header className={styles.postCardHeader}>\n\t\t\t\t\t\t<div className={styles.postCardPrimaryTag}>\n\t\t\t\t\t\t\t{film.frontmatter.tags[0] !== undefined && formatMessage(`tags.${film.frontmatter.tags[0]}.title`)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h2 className={styles.postCardTitle}>{film.frontmatter.title}</h2>\n\t\t\t\t\t</header>\n\n\t\t\t\t\t<section className={styles.postCardBylineContent}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{formatMessage(`projects.director`)} : {film.frontmatter.director}\n\t\t\t\t\t\t\t{/* \t<Link to={`/authors/${post.frontmatter.authors[0].id}/`}>\n\t\t\t\t\t\t\t\t{intl.formatMessage({\n\t\t\t\t\t\t\t\t\tid: `authors.${post.frontmatter.authors[0].id}.title`,\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Link> */}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{formatMessage(`projects.release`)} : <time dateTime={film.frontmatter.release}>{formatDate(film.frontmatter.release)}</time>\n\t\t\t\t\t\t\t{/* <span className=\"bull\">â€¢</span> {intl.formatNumber(film.timeToRead)} {intl.formatMessage({ id: 'posts.timeToRead' })} */}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</section>\n\t\t\t\t</Link>\n\t\t\t\t<footer className={styles.postCardMeta}>\n\t\t\t\t\t{/* \t<AuthorList authors={post.frontmatter.authors} /> */}\n\n\t\t\t\t\t<div className={styles.postCardExcerpt}>\n\t\t\t\t\t\t{/* \t\t\t\t\t\t<p>{film.excerpt}</p> */}\n\t\t\t\t\t\t{/* \t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName={`${styles.socialLink} ${styles.socialImdb}`}\n\t\t\t\t\t\t\thref={`https://www.imdb.com/title/${film.frontmatter.imdb}/`}\n\t\t\t\t\t\t\ttitle=\"IMDB\"\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\">\n\t\t\t\t\t\t\t<IMDB />\n\t\t\t\t\t\t</a> */}\n\t\t\t\t\t</div>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</article>\n\t);\n};\n","// extracted by mini-css-extract-plugin\nexport var socialLink = \"v_by\";\nexport var socialImdb = \"v_bZ\";\nexport var postCard = \"v_b0\";\nexport var postCardTitle = \"v_b1\";\nexport var postCardImage = \"v_b2\";\nexport var postCardImageLink = \"v_b3\";\nexport var postCardContentLink = \"v_b4\";\nexport var postCardHeader = \"v_b5\";\nexport var noImage = \"v_H\";\nexport var postCardPrimaryTag = \"v_b6\";\nexport var postCardContent = \"v_b7\";\nexport var postCardExcerpt = \"v_b8\";\nexport var postCardMeta = \"v_b9\";\nexport var postCardBylineContent = \"v_cb\";\nexport var postCardBylineDate = \"v_cc\";\nexport var bull = \"v_m\";\nexport var postCardLarge = \"v_cd\";","import * as React from 'react';\nimport { Index_projects } from '~src/pages/__generated__/Index';\nimport { Film } from '~src/types/Film';\nimport Link from '~src/_i18n/components/Link';\nimport useIntlHelper from '~src/_i18n/helpers/useIntlHelper';\nimport { FilmCard } from '../FilmCard/FilmCard';\nimport * as styles from './FilmFeed.module.scss';\n\nexport const FilmFeed: React.FC<{ data: Index_projects; isHome?: boolean }> = ({ data, isHome }) => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<div className={styles.posts}>\n\t\t\t<div className={styles.postFeed}>\n\t\t\t\t{(data.nodes as Film[]).map((film: Film, i: number) => {\n\t\t\t\t\treturn <FilmCard film={film} i={i} key={i} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t\t{isHome ? (\n\t\t\t\t<Link to=\"/filmography\">\n\t\t\t\t\t<h3 className={styles.readMore}> {isHome ? formatMessage('general.allProjects') : null}</h3>\n\t\t\t\t</Link>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","// extracted by mini-css-extract-plugin\nexport var posts = \"q_br\";\nexport var postFeed = \"q_bs\";\nexport var readMore = \"q_bt\";","import * as React from 'react';\nimport { GatsbyImage as Img, IGatsbyImageData } from 'gatsby-plugin-image';\n\n//import Img, { FixedObject, FluidObject } from 'gatsby-image';\n\nconst ImgSharp: React.FC<{\n\tclassName?: string;\n\timage: IGatsbyImageData;\n\tsrc?: string;\n\talt?: string;\n}> = ({ className, image, src, alt, ...props }) => (\n\t<>\n\t\t{image ? (\n\t\t\t<Img className={className} image={image} alt={alt} {...props} />\n\t\t) : (\n\t\t\tsrc && <img className={className} src={src} alt={alt} {...props} />\n\t\t)}\n\t</>\n);\n/*\nconst fixedObject = PropTypes.shape({\n\twidth: PropTypes.number.isRequired,\n\theight: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n\nconst fluidObject = PropTypes.shape({\n\taspectRatio: PropTypes.number.isRequired,\n\tsrc: PropTypes.string.isRequired,\n\tsrcSet: PropTypes.string.isRequired,\n\tsizes: PropTypes.string.isRequired,\n\tbase64: PropTypes.string,\n\ttracedSVG: PropTypes.string,\n\tsrcWebp: PropTypes.string,\n\tsrcSetWebp: PropTypes.string,\n\tmedia: PropTypes.string,\n});\n */\n\nexport default ImgSharp;\n","import * as React from 'react';\nimport { graphql } from 'gatsby';\nimport useIntlHelper from '~src/_i18n/helpers/useIntlHelper';\nimport Layout from '~src/components/Layout/Layout';\nimport { FilmFeed } from '~src/components/Sections/Filmography/FilmFeed/FilmFeed';\n\nconst FilmographyHero = () => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<header className=\"site-archive-header outer\">\n\t\t\t<div className=\"inner site-header-content\">\n\t\t\t\t<h1 className=\"site-title\"> {formatMessage('navigation.projects')}</h1>\n\t\t\t\t<h2 className=\"site-description\">{formatMessage('navigation.projects')}</h2>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\nconst FilmographyPage: React.FC<{ data }> = ({ data }) => {\n\tconst { formatMessage } = useIntlHelper();\n\treturn (\n\t\t<>\n\t\t\t<Layout template=\"film\" header={<FilmographyHero />}>\n\t\t\t\t<div className=\"inner\">\n\t\t\t\t\t<h2> {formatMessage('projects.films')}</h2>\n\t\t\t\t\t<FilmFeed data={data.films} />\n\n\t\t\t\t\t<h2> {formatMessage('projects.tv')}</h2>\n\t\t\t\t\t<FilmFeed data={data.tv} />\n\n\t\t\t\t\t<h2> {formatMessage('projects.shorts')}</h2>\n\t\t\t\t\t<FilmFeed data={data.shorts} />\n\n\t\t\t\t\t<h2> {formatMessage('projects.commercials')}</h2>\n\t\t\t\t\t<FilmFeed data={data.commercials} />\n\n\t\t\t\t\t{/* <details>\n\t\t\t\t\t\t<summary>Advertising</summary>\n\t\t\t\t\t\t<FilmFeed data={data.commercials} />\n\t\t\t\t\t</details> */}\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t</>\n\t);\n};\nexport default FilmographyPage;\n\nexport const indexQuery = graphql`\n\tquery FilmographyPageQuery($locale: String!) {\n\t\tfilms: allMdx(\n\t\t\tsort: { fields: [frontmatter___release], order: DESC }\n\t\t\tfilter: { fields: { locale: { eq: $locale }, category: { eq: \"filmography\" } }, frontmatter: { tags: { in: \"film\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t\tcategory\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tdirector\n\t\t\t\t\trelease(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttags\n\t\t\t\t\timdb\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData(layout: FULL_WIDTH, placeholder: TRACED_SVG)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t\tcommercials: allMdx(\n\t\t\tsort: { fields: [frontmatter___release], order: DESC }\n\t\t\tfilter: { fields: { locale: { eq: $locale }, category: { eq: \"filmography\" } }, frontmatter: { tags: { in: \"commercial\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t\tcategory\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\trelease(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttags\n\t\t\t\t\timdb\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData(layout: FULL_WIDTH, placeholder: TRACED_SVG)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t\tshorts: allMdx(\n\t\t\tsort: { fields: [frontmatter___release], order: DESC }\n\t\t\tfilter: { fields: { locale: { eq: $locale }, category: { eq: \"filmography\" } }, frontmatter: { tags: { in: \"short\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t\tcategory\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\trelease(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttags\n\t\t\t\t\tdirector\n\t\t\t\t\timdb\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData(layout: FULL_WIDTH, placeholder: TRACED_SVG)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\n\t\ttv: allMdx(\n\t\t\tsort: { fields: [frontmatter___release], order: DESC }\n\t\t\tfilter: { fields: { locale: { eq: $locale }, category: { eq: \"filmography\" } }, frontmatter: { tags: { in: \"tv\" } } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tfields {\n\t\t\t\t\tslug\n\t\t\t\t\tcategory\n\t\t\t\t}\n\t\t\t\tfrontmatter {\n\t\t\t\t\ttitle\n\t\t\t\t\tdirector\n\t\t\t\t\trelease(formatString: \"DD MMMM YYYY\")\n\t\t\t\t\ttags\n\t\t\t\t\timdb\n\t\t\t\t\timage {\n\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\tgatsbyImageData(layout: FULL_WIDTH, placeholder: TRACED_SVG)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\texcerpt(truncate: true, pruneLength: 200)\n\t\t\t\ttimeToRead\n\t\t\t}\n\t\t}\n\t}\n`;\n"],"sourceRoot":""}